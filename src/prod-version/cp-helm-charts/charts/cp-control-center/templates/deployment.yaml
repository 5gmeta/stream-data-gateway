{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta2
{{- end }}
kind: Deployment
metadata:
  name: {{ include "cp-control-center.fullname" . }}
  labels:
    app: {{ include "cp-control-center.name" . }}
    chart: {{ include "cp-control-center.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "cp-control-center.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "cp-control-center.name" . }}
        release: {{ .Release.Name }}
      {{- if or .Values.podAnnotations .Values.prometheus.jmx.enabled }}
      annotations:
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if .Values.prometheus.jmx.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.prometheus.jmx.port | quote }}
      {{- end }}
      {{- end }}
    spec:
      securityContext:
      {{- if .Values.securityContext }}
{{ toYaml .Values.securityContext | indent 8 }}
      {{- end}}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
          - /bin/bash
          - -c
          - |
            cp /app/* /usr/share/java/cp-base-new/
            cp /app/* /usr/share/java/confluent-control-center/
            /etc/confluent/docker/run
          volumeMounts:
          - name: volume-ssl
            mountPath: "/etc/ssl/certs/docker/"
          - name: jar-for-kafka
            mountPath: "/app/"
          ports:
            - name: cc-http
              containerPort: {{ .Values.serviceHttpPort}}
              protocol: TCP
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            - name: SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ssl-kafka-jaas-secret
                  key: SSL_TRUSTSTORE_PASSWORD
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: kafka-client-jaas-secret
                  key: CLIENT_ID
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: kafka-client-jaas-secret
                  key: CLIENT_SECRET
            - name: CONTROL_CENTER_BOOTSTRAP_SERVERS
              value: {{ template "cp-control-center.kafka.bootstrapServers" . }}
              #- name: CONFLUENT_CONTROLCENTER_STREAMS_SASL_MECHANISM
            - name: CONTROL_CENTER_STREAMS_SSL_KEYSTORE_LOCATION
              value: "/etc/ssl/certs/docker/broker1.jks"
            - name: CONTROL_CENTER_STREAMS_SSL_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ssl-kafka-jaas-secret
                  key: SSL_KEYSTORE_PASSWORD
            - name: CONTROL_CENTER_STREAMS_SSL_KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ssl-kafka-jaas-secret
                  key: SSL_KEY_PASSWORD
            - name: CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_LOCATION
              value: "/etc/ssl/certs/docker/truststore.jks"
            - name: CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ssl-kafka-jaas-secret
                  key: SSL_TRUSTSTORE_PASSWORD
            - name: CONTROL_CENTER_STREAMS_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
              value: 
            - name: CONTROL_CENTER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
              value:
            - name: CONTROL_CENTER_STREAMS_SASL_MECHANISM
              value: OAUTHBEARER
            - name: CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL
              value: SASL_SSL
            - name: CONTROL_CENTER_STREAMS_SASL_LOGIN_CALLBACK_HANDLER_CLASS
              value: io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
            - name: CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG
              value: >
                      org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required
                      oauth.client.id="$(CLIENT_ID)"
                      oauth.client.secret="$(CLIENT_SECRET)"
                      oauth.ssl.endpoint.identification.algorithm=""
                      oauth.token.endpoint.uri="https://keycloak:8443/realms/demo/protocol/openid-connect/token"
                      oauth.valid.issuer.uri="https://keycloak:8443/realms/demo"
                      oauth.jwks.endpoint.uri="https://keycloak:8443/realms/demo/protocol/openid-connect/certs"
                      oauth.ssl.truststore.location="/etc/ssl/certs/docker/truststore.jks"
                      oauth.ssl.truststore.password="$(SSL_TRUSTSTORE_PASSWORD)"
                      oauth.username.claim="preferred_username";
            - name: CONTROL_CENTER_ZOOKEEPER_CONNECT
              value: {{ template "cp-control-center.cp-zookeeper.service-name" . }}
            - name: CONTROL_CENTER_CONNECT_CLUSTER
              value: {{ template "cp-control-center.cp-kafka-connect.service-name" . }}
            - name: CONTROL_CENTER_KSQL_URL
              value: {{ template "cp-control-center.cp-ksql-server.service-name" . }}
            - name: CONTROL_CENTER_KSQL_ADVERTISED_URL
              value: {{ template "cp-control-center.cp-ksql-server.service-name" . }}
            - name: CONTROL_CENTER_SCHEMA_REGISTRY_URL
              value: {{ template "cp-control-center.cp-schema-registry.service-name" . }}
            - name: KAFKA_HEAP_OPTS
              value: "{{ .Values.heapOptions }}"
            {{- range $key, $value := .Values.configurationOverrides }}
            - name: {{ printf "CONTROL_CENTER_%s" $key | replace "." "_" | upper | quote }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.customEnv }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}            
      volumes:
      - name: volume-ssl
        persistentVolumeClaim:
          claimName: pvc-ssl
      - name: jar-for-kafka
        hostPath:
          path: "/home/meta/jar-for-kafka/"
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
